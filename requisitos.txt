Um campo para adicionar valor da despesa.

Adicione o atributo data-testid="value-input".
Um campo para adicionar a descrição da despesa.

Adicione o atributo data-testid="description-input".
Um campo para adicionar em qual moeda será registrada a despesa.

Adicione o atributo data-testid="currency-input".

Este campo deve ser um dropdown. a pessoa usuária deve poder escolher entre os campos: 'USD', 'CAD', 'EUR', 'GBP', 'ARS', 'BTC', 'LTC', 'JPY', 'CHF', 'AUD', 'CNY', 'ILS', 'ETH' e 'XRP'.

Os valores do campo de moedas devem ser puxados através da requisição à API.

Adicione um atributo data-testid para cada uma das opções acima com o câmbio correspondente, como por exemplo data-testid="USD".

O endpoint utilizado deve ser: https://economia.awesomeapi.com.br/json/all .

Remova das informações trazidas pela API a opção 'USDT' (Dólar Turismo).

Um campo para adicionar qual método de pagamento será utilizado.

Adicione o atributo data-testid="method-input".

Este campo deve ser um dropdown. A pessoa usuária deve poder escolher entre os campos: 'Dinheiro', 'Cartão de crédito' e 'Cartão de débito'.

Um campo para selecionar uma categoria (tag) para a despesa.

Este campo deve ser um dropdown. a pessoa usuária deve poder escolher entre os campos: 'Alimentação', 'Lazer', 'Trabalho', 'Transporte' e 'Saúde'.

Adicione o atributo data-testid="tag-input".

Um botão com o texto 'Adicionar despesa' que salva as informações da despesa no estado global e atualiza a soma de despesas no header.

Desenvolva a funcionalidade do botão "Adicionar despesa" de modo que ao clicar no botão, as seguintes ações sejam executadas:

Ao ser clicado, o botão deve fazer uma requisição à API para trazer o câmbio mais atualizado possível.

Os valores dos campos devem ser salvos no estado da aplicação, na chave expenses, dentro de um array contendo todos gastos que serão adicionados:

O id da despesa deve ser um número sequencial, começando em 0. Ou seja: a primeira despesa terá id 0, a segunda terá id 1, a terceira id 2, e assim por diante.

Você deverá salvar a cotação do câmbio feita no momento da adição para ter esse dado quando for efetuar uma edição do gasto. Caso você não tenha essa informação salva, o valor da cotação trazida poderá ser diferente do obtido anteriormente.

Atenção nesse ponto: você deverá fazer uma requisição para API e buscar a cotação no momento que o botão de `Adicionar despesa` for apertado. Para isso você deve utilizar um thunk
Após adicionar a despesa, atualize a soma total das despesas. Essa informação deve ficar no header dentro do elemento com data-testid="total-field"
As despesas salvas no Redux ficarão com um formato semelhante ao seguinte:

expenses: [{
  "id": 0,
  "value": "3",
  "description": "Hot Dog",
  "currency": "USD",
  "method": "Dinheiro",
  "tag": "Alimentação",
  "exchangeRates": {
    "USD": {
      "code": "USD",
      "name": "Dólar Comercial",
      "ask": "5.6208",
      ...
    },
    "CAD": {
      "code": "CAD",
      "name": "Dólar Canadense",
      "ask": "4.2313",
      ...
    },
    "EUR": {
      "code": "EUR",
      "name": "Euro",
      "ask": "6.6112",
      ...
    },
    "GBP": {
      "code": "GBP",
      "name": "Libra Esterlina",
      "ask": "7.2498",
      ...
    },
    "ARS": {
      "code": "ARS",
      "name": "Peso Argentino",
      "ask": "0.0729",
      ...
    },
    "BTC": {
      "code": "BTC",
      "name": "Bitcoin",
      "ask": "60299",
      ...
    },
    "LTC": {
      "code": "LTC",
      "name": "Litecoin",
      "ask": "261.69",
      ...
    },
    "JPY": {
      "code": "JPY",
      "name": "Iene Japonês",
      "ask": "0.05301",
      ...
    },
    "CHF": {
      "code": "CHF",
      "name": "Franco Suíço",
      "ask": "6.1297",
      ...
    },
    "AUD": {
      "code": "AUD",
      "name": "Dólar Australiano",
      "ask": "4.0124",
      ...
    },
    "CNY": {
      "code": "CNY",
      "name": "Yuan Chinês",
      "ask": "0.8278",
      ...
    },
    "ILS": {
      "code": "ILS",
      "name": "Novo Shekel Israelense",
      "ask": "1.6514",
      ...
    },
    "ETH": {
      "code": "ETH",
      "name": "Ethereum",
      "ask": "5184",
      ...
    },
    "XRP": {
      "code": "XRP",
      "name": "Ripple",
      "ask": "1.4",
      ...
    }
  }
}]
O que será verificado:

- Um campo para adicionar o valor da despesa
- Um campo para adicionar a descrição da despesa
- Um campo para selecionar em qual moeda será registrada a despesa
- Um campo para selecionar qual método de pagamento será utilizado
- Um campo para selecionar uma categoria (tag) para a despesa
- Um botão com o texto "Adicionar despesa" que salva as informações da despesa no estado global e atual.A



----------------------------------------------------------------------------------------------------------------